# Concept
C/0: list(nat) -> list(nat);

# Constructors
# # Booleans
TRUE/0: bool;
FALSE/0: bool;
# # Lists
NIL/0: t0. list(t0);
CONS/0: t0. t0 -> list(t0) -> list(t0);
# # Numbers
0/0: digit;
1/0: digit;
2/0: digit;
3/0: digit;
4/0: digit;
5/0: digit;
6/0: digit;
7/0: digit;
8/0: digit;
9/0: digit;
DIGIT/0: digit -> nat;
DECC/0: nat -> digit -> nat;
NAN/0: nat;

# Functions
./2: t1. t2. (t1 -> t2) -> t1 -> t2;
EMPTY/0: t0. list(t0) -> bool;
EQUAL/0: t0. t0 -> t0 -> bool;
FOLD/0: t0. t1. (t0 -> t1 -> t1) -> t1 -> list(t0) -> t1;
FILTER/0: t0. (t0 -> bool) -> list(t0) -> list(t0);
HEAD/0: t0. list(t0) -> t0;
IF/0: t0. bool -> t0 -> t0 -> t0;
MAP/0: t0. t1. (t0 -> t1) -> list(t0) -> list(t1);
REVERSE/0: t0. list(t0) -> list(t0);
TAIL/0: t0. list(t0) -> list(t0);
UNFOLD/0: t0. t1. (t1 -> bool) -> (t1 -> t0) -> (t1 -> t1) -> t1 -> list(t0);
+/0: nat -> nat -> nat;
-/0: nat -> nat -> nat;
>/0: nat -> nat -> bool;

