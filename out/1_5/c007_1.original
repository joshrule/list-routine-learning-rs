    Finished release [optimized] target(s) in 0.07s
     Running `target/release/simulation trs/waves/1_5/c007/simulation.toml`
# loaded parameters
# loaded lexicon
#   Signature:
#   C/0: list → list
#   TRUE/0: bool
#   FALSE/0: bool
#   NIL/0: list
#   CONS/0: nat → list → list
#   0/0: digit
#   1/0: digit
#   2/0: digit
#   3/0: digit
#   4/0: digit
#   5/0: digit
#   6/0: digit
#   7/0: digit
#   8/0: digit
#   9/0: digit
#   DIGIT/0: digit → nat
#   DECC/0: nat → digit → nat
#   ./2: ∀t1. ∀t2. (t1 → t2) → t1 → t2
#   EMPTY/0: list → bool
#   EQUAL/0: ∀t0. t0 → t0 → bool
#   HEAD/0: list → nat
#   IF/0: ∀t0. bool → t0 → t0 → t0
#   TAIL/0: list → list
#   x_: t6
#   y_: t7
#   x_: t20
#   x_: t30
#   y_: t31
#   x_: t41
#   y_: t42
#   x_: t54
#   y_: t55
#   x_: t68
#   y_: t69
#   x_: t88
#   y_: t89
#   
#   Background: 9
#   EMPTY [] = TRUE
#   EMPTY (CONS x_ y_) = FALSE
#   EQUAL x_ x_ = TRUE
#   EQUAL x_ y_ = FALSE
#   HEAD (CONS x_ y_) = x_
#   IF TRUE x_ y_ = x_
#   IF FALSE x_ y_ = y_
#   TAIL [] = []
#   TAIL (CONS x_ y_) = y_
#   
#   Templates: 4
#   C (CONS [!] [!]) = [!]
#   C [] = [!]
#   C [!] = [!]
#   [!] = [!]
#   
#   Deterministic: true
# loaded data
#   Datum { i: IntList([98, 5, 9]), o: IntList([19, 62, 3, 81, 54, 98, 5, 9]) }
#   Datum { i: IntList([9, 41, 5, 10, 9]), o: IntList([19, 62, 3, 81, 54, 9, 41, 5, 10, 9]) }
#   Datum { i: IntList([93]), o: IntList([19, 62, 3, 81, 54, 93]) }
#   Datum { i: IntList([44]), o: IntList([19, 62, 3, 81, 54, 44]) }
#   Datum { i: IntList([7, 0]), o: IntList([19, 62, 3, 81, 54, 7, 0]) }
#   Datum { i: IntList([8, 98, 5]), o: IntList([19, 62, 3, 81, 54, 8, 98, 5]) }
#   Datum { i: IntList([7, 70, 60]), o: IntList([19, 62, 3, 81, 54, 7, 70, 60]) }
#   Datum { i: IntList([56, 28, 81, 62, 5]), o: IntList([19, 62, 3, 81, 54, 56, 28, 81, 62, 5]) }
#   Datum { i: IntList([68, 87, 6, 6]), o: IntList([19, 62, 3, 81, 54, 68, 87, 6, 6]) }
#   Datum { i: IntList([3, 6, 8]), o: IntList([19, 62, 3, 81, 54, 3, 6, 8]) }
#   Datum { i: IntList([10, 5, 51]), o: IntList([19, 62, 3, 81, 54, 10, 5, 51]) }
#   Datum { i: IntList([80]), o: IntList([19, 62, 3, 81, 54, 80]) }
#   Datum { i: IntList([64, 6, 8, 97]), o: IntList([19, 62, 3, 81, 54, 64, 6, 8, 97]) }
#   Datum { i: IntList([4, 7, 48]), o: IntList([19, 62, 3, 81, 54, 4, 7, 48]) }
#   Datum { i: IntList([6, 10, 45, 9, 10]), o: IntList([19, 62, 3, 81, 54, 6, 10, 45, 9, 10]) }
#   Datum { i: IntList([]), o: IntList([19, 62, 3, 81, 54]) }
#   Datum { i: IntList([82, 2]), o: IntList([19, 62, 3, 81, 54, 82, 2]) }
#   Datum { i: IntList([1, 8, 1, 25]), o: IntList([19, 62, 3, 81, 54, 1, 8, 1, 25]) }
#   Datum { i: IntList([0, 91, 6]), o: IntList([19, 62, 3, 81, 54, 0, 91, 6]) }
#   Datum { i: IntList([53, 59]), o: IntList([19, 62, 3, 81, 54, 53, 59]) }
#   Datum { i: IntList([77, 2, 47, 40]), o: IntList([19, 62, 3, 81, 54, 77, 2, 47, 40]) }
#   Datum { i: IntList([0, 57, 33, 60, 82]), o: IntList([19, 62, 3, 81, 54, 0, 57, 33, 60, 82]) }
#   Datum { i: IntList([5]), o: IntList([19, 62, 3, 81, 54, 5]) }
#   Datum { i: IntList([37, 8, 5, 82]), o: IntList([19, 62, 3, 81, 54, 37, 8, 5, 82]) }
#   Datum { i: IntList([45, 10, 42]), o: IntList([19, 62, 3, 81, 54, 45, 10, 42]) }
#   Datum { i: IntList([5, 3, 9, 81, 10]), o: IntList([19, 62, 3, 81, 54, 5, 3, 9, 81, 10]) }
#   Datum { i: IntList([64]), o: IntList([19, 62, 3, 81, 54, 64]) }
#   Datum { i: IntList([4]), o: IntList([19, 62, 3, 81, 54, 4]) }
#   Datum { i: IntList([4, 61, 38]), o: IntList([19, 62, 3, 81, 54, 4, 61, 38]) }
#   Datum { i: IntList([52, 10, 5, 1]), o: IntList([19, 62, 3, 81, 54, 52, 10, 5, 1]) }
#   Datum { i: IntList([41, 2, 6, 5]), o: IntList([19, 62, 3, 81, 54, 41, 2, 6, 5]) }
#   Datum { i: IntList([3, 78, 10, 33, 55]), o: IntList([19, 62, 3, 81, 54, 3, 78, 10, 33, 55]) }
#   Datum { i: IntList([3, 94, 5, 68, 97]), o: IntList([19, 62, 3, 81, 54, 3, 94, 5, 68, 97]) }
#   Datum { i: IntList([10]), o: IntList([19, 62, 3, 81, 54, 10]) }
#   Datum { i: IntList([0, 35, 16, 7]), o: IntList([19, 62, 3, 81, 54, 0, 35, 16, 7]) }
#   Datum { i: IntList([7, 10, 1]), o: IntList([19, 62, 3, 81, 54, 7, 10, 1]) }
#   Datum { i: IntList([86, 3, 10]), o: IntList([19, 62, 3, 81, 54, 86, 3, 10]) }
#   Datum { i: IntList([6, 16]), o: IntList([19, 62, 3, 81, 54, 6, 16]) }
#   Datum { i: IntList([81, 8, 0, 69]), o: IntList([19, 62, 3, 81, 54, 81, 8, 0, 69]) }
#   Datum { i: IntList([2, 31, 72, 79]), o: IntList([19, 62, 3, 81, 54, 2, 31, 72, 79]) }
#   Datum { i: IntList([41, 40, 0, 2, 6]), o: IntList([19, 62, 3, 81, 54, 41, 40, 0, 2, 6]) }
#   Datum { i: IntList([56, 17, 7, 91, 5]), o: IntList([19, 62, 3, 81, 54, 56, 17, 7, 91, 5]) }
#   Datum { i: IntList([66, 1, 11, 23, 94]), o: IntList([19, 62, 3, 81, 54, 66, 1, 11, 23, 94]) }
#   Datum { i: IntList([83]), o: IntList([19, 62, 3, 81, 54, 83]) }
#   Datum { i: IntList([93, 96, 87]), o: IntList([19, 62, 3, 81, 54, 93, 96, 87]) }
#   Datum { i: IntList([7, 91]), o: IntList([19, 62, 3, 81, 54, 7, 91]) }
#   Datum { i: IntList([72, 9, 55, 35, 6]), o: IntList([19, 62, 3, 81, 54, 72, 9, 55, 35, 6]) }
#   Datum { i: IntList([0, 68, 4]), o: IntList([19, 62, 3, 81, 54, 0, 68, 4]) }
#   Datum { i: IntList([53, 56, 7, 77]), o: IntList([19, 62, 3, 81, 54, 53, 56, 7, 77]) }
#   Datum { i: IntList([5, 38]), o: IntList([19, 62, 3, 81, 54, 5, 38]) }
# loaded h_star
#   .(C xs_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) xs_)))));
# initialized population
# evolving
#   n_data,generation,rank,nlposterior,trs
#   0,0,0,0.0000,""
#   0,0,1,0.0400,".(C var18_) = NIL;"
#   0,0,2,0.0400,".(C var39_) = var39_;"
#   0,0,3,0.0400,".(var95_ var96_) = var96_;"
#   0,0,4,0.0600,"C = .(CONS .(DIGIT 1));"
#   0,0,5,0.0600,".(C var302_) = .(TAIL NIL);"
#   0,0,6,0.0600,".(C .(var352_ var353_)) = var353_;"
#   0,0,7,0.0800,".(C .(.(CONS var42_) var43_)) = NIL;"
#   0,0,8,0.0800,".(C .(.(CONS var69_) var70_)) = var70_;"
#   0,0,9,0.0800,".(C .(var218_ .(var219_ var220_))) = NIL;"
#   0,0,10,0.1000,".(C .(.(CONS .(var293_ var294_)) var295_)) = var295_;"
#     increased n_delta to 300
#   1,0,0,2.6246,".(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,0,1,2.8246,".(C .(.(CONS .(.(DECC .(DIGIT 9)) 8)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT 9)) 8)) var485_))))));"
#   1,0,2,2.8846,".(C NIL) = .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL));\n.(C .(var1909_ .(.(var1908_ var1911_) .(var1912_ var1616_)))) = .(.(var1908_ .(.(DECC .(DIGIT 1)) 9)) .(.(var1908_ .(.(DECC .(DIGIT 6)) 2)) .(.(var1908_ .(DIGIT 3)) .(.(var1908_ .(.(DECC .(DIGIT 8)) 1)) .(.(var1908_ .(.(DECC var1911_) 4)) .(var1909_ .(C var1616_)))))));"
#   1,0,3,2.8846,".(C NIL) = .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL));\n.(C .(var1836_ .(.(CONS var1926_) .(var1927_ var1616_)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC var1926_) 4)) .(var1836_ .(C var1616_)))))));"
#   1,0,4,2.9046,".(C .(var481_ .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var481_ .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL))))))));"
#   1,0,5,2.9446,".(C .(.(CONS .(.(DECC .(DIGIT 9)) 8)) .(.(CONS .(DIGIT 5)) var495_))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT 9)) 8)) .(.(CONS .(DIGIT 5)) var495_)))))));"
#   1,0,6,2.9446,".(C .(.(CONS var494_) .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS var494_) .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL))))))));"
#   1,0,7,2.9646,".(C .(.(CONS .(DIGIT 9)) NIL)) = NIL;\n.(C .(var1054_ .(.(CONS .(DIGIT 5)) var690_))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var1054_ .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) .(C var690_)))))))));"
#   1,0,8,2.9646,".(C NIL) = .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL));\n.(C .(var1836_ .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) var1616_)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var1836_ .(C var1616_)))))));"
#   1,0,9,2.9646,".(C NIL) = .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT 9)) 8)) .(.(CONS .(DIGIT 5)) .(.(CONS .(DIGIT 9)) NIL))))));\n.(C .(var1704_ .(var1700_ .(var1697_ var1612_)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(C var1612_)));"
#   1,0,10,2.9846,".(C .(.(CONS .(.(DECC var479_) 8)) .(.(CONS .(DIGIT 5)) .(.(CONS var479_) NIL)))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC var479_) 8)) .(.(CONS .(DIGIT 5)) .(.(CONS var479_) NIL))))))));"
#   1,1,0,2.6246,".(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,1,1,2.6646,".(C .(var2441_ var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var2441_ var485_))))));"
#   1,1,2,2.7046,".(C .(.(CONS var2439_) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS var2439_) var485_))))));"
#   1,1,3,2.7446,".(C .(.(CONS .(var2437_ 8)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(var2437_ 8)) var485_))))));"
#   1,1,4,2.7846,".(C .(.(CONS .(.(DECC var2431_) 8)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC var2431_) 8)) var485_))))));"
#   1,1,5,2.7846,".(C .(var2684_ .(.(CONS .(DIGIT 5)) var495_))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var2684_ .(.(CONS .(DIGIT 5)) var495_)))))));"
#   1,1,6,2.8246,".(C .(.(CONS .(.(DECC .(DIGIT 9)) 8)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT 9)) 8)) var485_))))));"
#   1,1,7,2.8246,".(C .(.(CONS .(.(DECC .(DIGIT 9)) var2430_)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT var2430_)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT 9)) var2430_)) var485_))))));"
#   1,1,8,2.8246,".(C .(.(CONS .(.(DECC .(DIGIT var2438_)) 8)) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) var2438_)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS .(.(DECC .(DIGIT var2438_)) 8)) var485_))))));"
#   1,1,9,2.8246,".(C .(.(CONS .(.(DECC .(var2436_ 9)) 8)) var485_)) = .(.(CONS .(.(DECC .(var2436_ 1)) 9)) .(.(CONS .(.(DECC .(var2436_ 6)) 2)) .(.(CONS .(var2436_ 3)) .(.(CONS .(.(DECC .(var2436_ 8)) 1)) .(.(CONS .(.(DECC .(var2436_ 5)) 4)) .(.(CONS .(.(DECC .(var2436_ 9)) 8)) var485_))))));"
#   1,1,10,2.8246,".(C .(.(CONS .(.(var2433_ .(DIGIT 9)) 8)) var485_)) = .(.(CONS .(.(var2433_ .(DIGIT 1)) 9)) .(.(CONS .(.(var2433_ .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(var2433_ .(DIGIT 8)) 1)) .(.(CONS .(.(var2433_ .(DIGIT 5)) 4)) .(.(CONS .(.(var2433_ .(DIGIT 9)) 8)) var485_))))));"
#   1,2,0,2.6246,".(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,1,2.6446,"op188 = HEAD;\n.(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,2,2.6646,".(C .(var2441_ var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var2441_ var485_))))));"
#   1,2,3,2.6646,".(C NIL) = NIL;\n.(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,4,2.6846,".(op51 NIL) = .(op55 NIL);\n.(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,5,2.6846,".(var10466_ .(var10466_ var10467_)) = var10467_;\n.(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,6,2.7046,".(C .(.(CONS var2439_) var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(.(CONS var2439_) var485_))))));"
#   1,2,7,2.7046,".(C .(var2684_ .(var6791_ var495_))) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var2684_ .(var6791_ var495_)))))));"
#   1,2,8,2.7046,".(C .(.(var7065_ var2439_) var485_)) = .(.(var7065_ .(.(DECC .(DIGIT 1)) 9)) .(.(var7065_ .(.(DECC .(DIGIT 6)) 2)) .(.(var7065_ .(DIGIT 3)) .(.(var7065_ .(.(DECC .(DIGIT 8)) 1)) .(.(var7065_ .(.(DECC .(DIGIT 5)) 4)) .(.(var7065_ var2439_) var485_))))));"
#   1,2,9,2.7046,".(C .(.(CONS var9341_) NIL)) = NIL;\n.(C var489_) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) var489_)))));"
#   1,2,10,2.7046,".(C NIL) = NIL;\n.(C .(var2441_ var485_)) = .(.(CONS .(.(DECC .(DIGIT 1)) 9)) .(.(CONS .(.(DECC .(DIGIT 6)) 2)) .(.(CONS .(DIGIT 3)) .(.(CONS .(.(DECC .(DIGIT 8)) 1)) .(.(CONS .(.(DECC .(DIGIT 5)) 4)) .(var2441_ var485_))))));"

thread 'main' has overflowed its stack
fatal runtime error: stack overflow
